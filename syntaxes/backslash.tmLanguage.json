{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "backslash (tsh)",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "comment.line.double-slash.backslash",
					"match": "//.*$"
				},
				{
					"name": "keyword.control",
					"match": "\\b(if|else)\\b"
				},
				{
					"match": "(#\\s*include)\\s*<([^>]+)>",
					"captures": {
						"1": {
							"name": "keyword.control.include"
						},
						"2": {
							"name": "string.quoted.double",
							"patterns": [
								{
									"include": "$self"
								}
							]
						}
					}
				},
				{
					"match": "\\b(fn) ([a-zA-Z_][a-zA-Z0-9_]*)",
					"captures": {
						"1": { "name": "keyword.control" },  
						"2": { "name": "entity.name.function" }
					}
				},
				{
					"name": "keyword.control",
					"match": "\\b(fn)\\b"
				},
				{
					"name": "keyword.other",
					"match": "\\b(var|list|global|start|gf)\\b"
				},
				{
					"name": "entity.name.function",
					"match": "(?<=\\b)([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()"
				},
				{
					"name": "variable.language.boolean",
					"match": "\\b(true|True|false|False)\\b"
				},
				{
					"match": "\\b([A-Za-z_][A-Za-z0-9_]*)\\b",
					"name": "variable.other"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.backslash",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.backslash",
					"match": "\\\\."
				}
			]
		}
	},
	"scopeName": "source.backslash"
}